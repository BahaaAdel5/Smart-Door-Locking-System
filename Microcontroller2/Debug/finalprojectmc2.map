Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./uart.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./app2.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./app2.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

key55               0x1               ./app2.o
key4                0x1               ./app2.o
key5                0x1               ./app2.o
key33               0x1               ./app2.o
receivedByte        0x1               ./app2.o
key11               0x1               ./app2.o
key1                0x1               ./app2.o
BAUD_PRESCALE       0x2               ./uart.o
key44               0x1               ./app2.o
key3                0x1               ./app2.o
key2                0x1               ./app2.o
key22               0x1               ./app2.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./app2.o
LOAD ./external_eeprom.o
LOAD ./i2c.o
LOAD ./timer0.o
LOAD ./uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9a0
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./app2.o
 .text          0x00000092        0x0 ./external_eeprom.o
 .text          0x00000092        0x0 ./i2c.o
 .text          0x00000092        0x0 ./timer0.o
 .text          0x00000092        0x0 ./uart.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.timer_fn
                0x00000092       0x3e ./app2.o
                0x00000092                timer_fn
 .text.storePassFirst
                0x000000d0       0x7c ./app2.o
                0x000000d0                storePassFirst
 .text.storePassCheck
                0x0000014c       0xce ./app2.o
                0x0000014c                storePassCheck
 .text.rotateMotor
                0x0000021a       0xb2 ./app2.o
                0x0000021a                rotateMotor
 .text.buzzerStart
                0x000002cc       0x3e ./app2.o
                0x000002cc                buzzerStart
 .text.main     0x0000030a       0x7e ./app2.o
                0x0000030a                main
 .text.EEPROM_init
                0x00000388       0x16 ./external_eeprom.o
                0x00000388                EEPROM_init
 .text.EEPROM_writeByte
                0x0000039e       0x82 ./external_eeprom.o
                0x0000039e                EEPROM_writeByte
 .text.EEPROM_readByte
                0x00000420       0xc0 ./external_eeprom.o
                0x00000420                EEPROM_readByte
 .text.TWI_init
                0x000004e0       0x44 ./i2c.o
                0x000004e0                TWI_init
 .text.TWI_start
                0x00000524       0x20 ./i2c.o
                0x00000524                TWI_start
 .text.TWI_stop
                0x00000544       0x16 ./i2c.o
                0x00000544                TWI_stop
 .text.TWI_write
                0x0000055a       0x2e ./i2c.o
                0x0000055a                TWI_write
 .text.TWI_readWithACK
                0x00000588       0x26 ./i2c.o
                0x00000588                TWI_readWithACK
 .text.TWI_readWithNACK
                0x000005ae       0x26 ./i2c.o
                0x000005ae                TWI_readWithNACK
 .text.TWI_getStatus
                0x000005d4       0x1e ./i2c.o
                0x000005d4                TWI_getStatus
 .text.__vector_9
                0x000005f2       0x66 ./timer0.o
                0x000005f2                __vector_9
 .text.timer0_init_normal_mode
                0x00000658       0x8c ./timer0.o
                0x00000658                timer0_init_normal_mode
 .text.timer0_setCallBack
                0x000006e4       0x24 ./timer0.o
                0x000006e4                timer0_setCallBack
 .text.UART_init
                0x00000708      0x12c ./uart.o
                0x00000708                UART_init
 .text.UART_sendByte
                0x00000834       0x2e ./uart.o
                0x00000834                UART_sendByte
 .text.UART_recieveByte
                0x00000862       0x1e ./uart.o
                0x00000862                UART_recieveByte
 .text.UART_sendString
                0x00000880       0x52 ./uart.o
                0x00000880                UART_sendString
 .text.UART_receiveString
                0x000008d2       0x86 ./uart.o
                0x000008d2                UART_receiveString
 .text.libgcc   0x00000958       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00000958                __udivmodsi4
 .text.libgcc   0x0000099c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x0000099c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x0000099c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000099c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000099c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000099c                exit
                0x0000099c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000099c        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000009a0                _etext = .

.data           0x00800060        0xe load address 0x000009a0
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./app2.o
 .data          0x00800060        0x0 ./external_eeprom.o
 .data          0x00800060        0x0 ./i2c.o
 .data          0x00800060        0x0 ./timer0.o
 .data          0x00800060        0x0 ./uart.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.Timer0_Config
                0x00800060        0x4 ./app2.o
                0x00800060                Timer0_Config
 .data.UART_config
                0x00800064        0x6 ./app2.o
                0x00800064                UART_config
 .data.I2C_config
                0x0080006a        0x3 ./external_eeprom.o
                0x0080006a                I2C_config
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006e                . = ALIGN (0x2)
 *fill*         0x0080006d        0x1 00
                0x0080006e                _edata = .
                0x0080006e                PROVIDE (__data_end, .)

.bss            0x0080006e       0x14
                0x0080006e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x0080006e        0x0 ./app2.o
 .bss           0x0080006e        0x0 ./external_eeprom.o
 .bss           0x0080006e        0x0 ./i2c.o
 .bss           0x0080006e        0x0 ./timer0.o
 .bss           0x0080006e        0x0 ./uart.o
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.motorStatus
                0x0080006e        0x1 ./app2.o
                0x0080006e                motorStatus
 .bss.motorCount
                0x0080006f        0x1 ./app2.o
                0x0080006f                motorCount
 .bss.g_tick    0x00800070        0x2 ./app2.o
                0x00800070                g_tick
 .bss.buzzerFlag
                0x00800072        0x1 ./app2.o
                0x00800072                buzzerFlag
 .bss.g_callBackPtr
                0x00800073        0x2 ./timer0.o
 *(COMMON)
 COMMON         0x00800075        0xb ./app2.o
                0x00800075                key55
                0x00800076                key4
                0x00800077                key5
                0x00800078                key33
                0x00800079                receivedByte
                0x0080007a                key11
                0x0080007b                key1
                0x0080007c                key44
                0x0080007d                key3
                0x0080007e                key2
                0x0080007f                key22
 COMMON         0x00800080        0x2 ./uart.o
                0x00800080                BAUD_PRESCALE
                0x00800082                PROVIDE (__bss_end, .)
                0x000009a0                __data_load_start = LOADADDR (.data)
                0x000009ae                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800082        0x0
                0x00800082                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800082                PROVIDE (__noinit_end, .)
                0x00800082                _end = .
                0x00800082                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x15a8
 *(.stab)
 .stab          0x00000000      0x8e8 ./app2.o
 .stab          0x000008e8      0x3b4 ./external_eeprom.o
                                0x60c (size before relaxing)
 .stab          0x00000c9c      0x348 ./i2c.o
                                0x5d0 (size before relaxing)
 .stab          0x00000fe4      0x234 ./timer0.o
                                0x4d4 (size before relaxing)
 .stab          0x00001218      0x390 ./uart.o
                                0x660 (size before relaxing)

.stabstr        0x00000000      0xf63
 *(.stabstr)
 .stabstr       0x00000000      0xf63 ./app2.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(finalprojectmc2.elf elf32-avr)
LOAD linker stubs
